var o=class{constructor(){this.baseObjects=[];this.assets={}}loadAssets(e){return new Promise((i,d)=>{let t=0,r=0,c=()=>{r++,setTimeout(()=>{r===t&&i(!0)},1)},n=s=>{t++;let a=new Image;return a.src=s,a.onload=c,a};e.forEach(this.prepareAsset(n))})}prepareAsset(e){return({id:i,src:d,states:t})=>{let r=e(d),c={id:i,img:r,states:{}};t&&Object.keys(t).forEach(n=>{let s,a=r;typeof t[n]=="string"?s={src:t[n]}:s=t[n],s.src&&(a=e(s.src)),c.states[n]={img:a,transform:s.transform}}),this.assets[i]=c}}setupCanvas(e){this.bg=e.bg||"#2c3e50",this.canvas=document.createElement("canvas"),this.canvas.id="game",this.canvas.width=e.w||800,this.canvas.height=e.h||450,document.body.appendChild(this.canvas),this.ctx=this.canvas.getContext("2d"),this.clearCanvas()}clearCanvas(){if(!this.ctx)throw new Error("Failed to set up context.");this.ctx.fillStyle=this.bg,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}baseRender(e){this.baseObjects=e}render(e){}};window&&(window.DumbRenderer=o);var m=o;export{m as default};
